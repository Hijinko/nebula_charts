# Default values for wger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  persistence:
    enabled: true # required
    storageClassName: longhorn


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

nginx:
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 100M
      #nginx.ingress.kubernetes.io/proxy-pass: http://wger
      #nginx.ingress.kubernetes.io/proxy-set-header: "Host $host"
      #nginx.ingress.kubernetes.io/proxy-set-header: "X-Forwarded-For $proxy_add_x_forwarded_for"
      #nginx.ingress.kubernetes.io/proxy-set-header: "X-Forwarded-Proto $http_x_forwarded_proto"
      #nginx.ingress.kubernetes.io/proxy-redirect: "off"
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: wger.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

podSecurityContext: {}
  #fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  #readOnlyRootFilesystem: false
  #runAsNonRoot: true
  #runAsUser: 1000

environment:
  ACCESS_TOKEN_LIFETIME: "10"
  ALLOW_GUEST_USERS: "False"
  ALLOW_REGISTRATION: "False"
  ALLOW_UPLOAD_VIDEOS: "True"
  AXES_COOLOFF_TIME: "30"
  AXES_ENABLED: "True"
  AXES_FAILURE_LIMIT: "10"
  AXES_HANDLER: axes.handlers.cache.AxesCacheHandler
  CELERY_BACKEND: redis://wger-cache:6379/2
  CELERY_BROKER: redis://wger-cache:6379/2
  CELERY_FLOWER_PASSWORD: adminadmin
  DJANGO_CACHE_BACKEND: django_redis.cache.RedisCache
  DJANGO_CACHE_CLIENT_CLASS: django_redis.client.DefaultClient
  DJANGO_CACHE_LOCATION: redis://wger-cache:6379/1
  DJANGO_CACHE_TIMEOUT: "1296000" # in seconds - 60*60*24*15, 15 Days'
  DJANGO_DB_DATABASE: wger
  DJANGO_DB_ENGINE: django.db.backends.postgresql
  DJANGO_DB_HOST: wger-db
  DJANGO_DB_PASSWORD: wger
  DJANGO_DB_PORT: "5432"
  DJANGO_DB_USER: wger
  DJANGO_DEBUG: "False"
  DJANGO_PERFORM_MIGRATIONS: "True" # True # Perform any new database migrations on startup'
  DOWNLOAD_INGREDIENTS_FROM: WGER
  EXERCISE_CACHE_TTL: "18000" # in seconds - 5*60*60, 5 hours'
  FROM_EMAIL: "wger@example.com"
  MIN_ACCOUNT_AGE_TO_TRUST: "21"
  REFRESH_TOKEN_LIFETIME: "24" # The lifetime duration of the refresh token, in hours'
  SECRET_KEY: wger-docker-supersecret-key-1234567890!@#$%^&*(-_)
  SIGNING_KEY: wger-docker-secret-jwtkey-1234567890!@#$%^&*(-_=+)
  SITE_URL: https://wger.local
  SYNC_EXERCISE_IMAGES_CELERY: "True"
  SYNC_EXERCISE_VIDEOS_CELERY: "True"
  SYNC_EXERCISES_CELERY: "True"
  TIME_ZONE: America/New_York
  USE_CELERY: "True" # default True
  WGER_INSTANCE: 'https://wger.de # Wger instance from which to sync exercises, images,
  #  etc.'
  WGER_USE_GUNICORN: "True"
  CSRF_TRUSTED_ORIGINS: https://wger.local
  #X_FORWARDED_PROTO_HEADER_SET: "True"
  # Static files
  # If you are running the application behind a reverse proxy, put the URL of the
  # domain or IP here, otherwise some image links *might* break (specially in the
  # mobile app)
  MEDIA_URL: https://wger.local/media/
  STATIC_URL: https://wger.local/static/
  POSTGRES_USER: wger
  POSTGRES_PASSWORD: wger
  POSTGRES_DB: wger

# the following commands may need to be run on the web pod after initial setup
#  python3 manage.py sync-exercises
#  python3 manage.py download-exercise-images
#  python3 manage.py download-exercise-videos
#  wger load-online-fixtures
